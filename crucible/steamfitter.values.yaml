steamfitter-api:
  image:
    repository: cmusei/steamfitter-api
    tag: '3.6.1'
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: $INGRESS_CLASS
      nginx.ingress.kubernetes.io/proxy-read-timeout: '86400'
      nginx.ingress.kubernetes.io/proxy-send-timeout: '86400'
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host: $DOMAIN
        paths:
          - path: /steamfitter/(api|swagger|hubs)
            pathType: Prefix
    tls:
      - secretName: appliance-cert
        hosts:
         - $DOMAIN
  certificateMap: "appliance-root-ca"

  identity:
    register: true
    identityMap: 'identity-identity-api'
    initCommand: ''
    client: |-
      [
        {
          "name": "steamfitter-api",
          "displayName": "Steamfitter API",
          "description": null,
          "grants": "authorization_code client_credentials",
          "scopes": "steamfitter-api vm-api player-api",
          "enabled": true,
          "requirePkce": true,
          "allowAccessTokensViaBrowser": false,
          "requireConsent": false,
          "consentLifetime": "30d",
          "alwaysIncludeUserClaimsInIdToken": false,
          "identityTokenLifetime": "5m",
          "accessTokenLifetime": "1h",
          "authorizationCodeLifetime": "5m",
          "allowOfflineAccess": false,
          "updateAccessTokenClaimsOnRefresh": false,
          "useOneTimeRefreshTokens": false,
          "slidingRefreshTokenLifetime": "15d",
          "absoluteRefreshTokenLifetime": "30d",
          "published": false,
          "url": "https://$DOMAIN/steamfitter",
          "logoUrl": null,
          "frontChannelLogoutUrl": null,
          "backChannelLogoutUrl": null,
          "redirectUrls": [
            { "value": "https://$DOMAIN/steamfitter/api/oauth2-redirect.html" }
          ],
          "postLogoutUrls": [{ "value": "https://$DOMAIN/steamfitter/api" }],
          "corsUrls": [{ "value": "https://$DOMAIN" }],
          "alwaysSendClientClaims": false,
          "clientClaimsPrefix": "client_",
          "claims": [],
          "secrets": [],
          "managers": []
        },
        {
            "name": "steamfitter-admin",
            "displayName": "Steamfitter Admin",
            "description": null,
            "grants": "password client_credentials",
            "scopes": "player-api steamfitter-api vm-api",
            "enabled": true,
            "requirePkce": true,
            "allowAccessTokensViaBrowser": false,
            "requireConsent": false,
            "consentLifetime": "30d",
            "alwaysIncludeUserClaimsInIdToken": false,
            "identityTokenLifetime": "5m",
            "accessTokenLifetime": "1h",
            "authorizationCodeLifetime": "5m",
            "allowOfflineAccess": false,
            "updateAccessTokenClaimsOnRefresh": false,
            "useOneTimeRefreshTokens": false,
            "slidingRefreshTokenLifetime": "15d",
            "absoluteRefreshTokenLifetime": "30d",
            "published": false,
            "url": "https://$DOMAIN/alloy",
            "logoUrl": null,
            "frontChannelLogoutUrl": null,
            "backChannelLogoutUrl": null,
            "corsUrls": [{ "value": "https://$DOMAIN" }],
            "alwaysSendClientClaims": false,
            "clientClaimsPrefix": "client_",
            "claims": [],
            "secrets": [],
            "managers": []
          }
        ]
      
    resource: |-
      {
        "type": "api",
        "name": "steamfitter-api",
        "displayName": "Steamfitter Api",
        "enabled": true,
        "default": true,
        "required": false,
        "emphasize": false,
        "showInDiscoveryDocument": true
      }
    
  env:
    PathBase: "/steamfitter"
    # Connection String to database
    ConnectionStrings__PostgreSQL: "Server=$POSTGRES_SERVER;Port=5432;Database=steamfitter_db;Username=$POSTGRES_USER;Password=$POSTGRES_PASS;SSL Mode=Prefer;Trust Server Certificate=true;"

    CorsPolicy__Origins__0: https://$DOMAIN
    CorsPolicy__AllowAnyMethod: true
    CorsPolicy__AllowAnyHeader: true
    Logging__LogLevel__Default: "$CRUCIBLE_LOG_LEVEL"
    Logging__LogLevel__System: "$CRUCIBLE_LOG_LEVEL"
    Logging__LogLevel__Microsoft: "$CRUCIBLE_LOG_LEVEL"
    Logging__Console__LogLevel__Default: "$CRUCIBLE_LOG_LEVEL"
    Logging__Console__LogLevel__System: "$CRUCIBLE_LOG_LEVEL"
    Logging__Console__LogLevel__Microsoft: "$CRUCIBLE_LOG_LEVEL"
    # OAuth2 Identity Client for Application
    Authorization__Authority: https://$DOMAIN/identity
    Authorization__AuthorizationUrl: https://$DOMAIN/identity/connect/authorize
    Authorization__TokenUrl: https://$DOMAIN/identity/connect/token
    Authorization__AuthorizationScope: "steamfitter-api vm-api"
    Authorization__ClientId: steamfitter-api
    Authorization__ClientName: "Steamfitter API"

    # OAuth2 Identity Client /w Password
    ResourceOwnerAuthorization__Authority: https://$DOMAIN/identity
    ResourceOwnerAuthorization__ClientId: steamfitter-admin
    ResourceOwnerAuthorization__UserName: crucible-admin@$DOMAIN #TODO
    ResourceOwnerAuthorization__Password: $CRUCIBLE_ADMIN_PASS #TODO
    ResourceOwnerAuthorization__Scope: "vm-api"

    ClientSettings__urls__steamfitterApi: https://$DOMAIN/steamfitter
    ClientSettings__urls__vmApi: https://$DOMAIN/vm

    # Stackstorm Configuration
    # TODO - Document Stackstorm dependencies
    VmTaskProcessing__ApiType: st2
    VmTaskProcessing__ApiUsername: "st2admin"
    VmTaskProcessing__ApiPassword: "eYr#AxMS9@n6BsWWxPgj"
    VmTaskProcessing__ApiBaseUrl: "https://$DOMAIN/stackstorm"
    VmTaskProcessing__ApiParameters__clusters: ""

    # Basic seed data to jumpstart deployement
    # TODO - Document Seed data
    SeedData__Users__0__id: "dee684c5-2eaf-401a-915b-d3d4320fe5d5"
    SeedData__Users__0__name:  "administrator@$DOMAIN"
    SeedData__Users__1__id: "32c11441-7eec-47eb-a915-607c4f2529f4"
    SeedData__Users__1__name:  "crucible-admin@$DOMAIN"
    

    SeedData__UserPermissions__0__UserId: "dee684c5-2eaf-401a-915b-d3d4320fe5d5"
    SeedData__UserPermissions__0__PermissionId: "00000000-0000-0000-0000-000000000001"
    SeedData__UserPermissions__1__UserId: "32c11441-7eec-47eb-a915-607c4f2529f4"
    SeedData__UserPermissions__1__PermissionId: "00000000-0000-0000-0000-000000000001"

steamfitter-ui:
  image:
    repository: cmusei/steamfitter-ui
    pullPolicy: IfNotPresent
    tag: "3.6.1"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: $INGRESS_CLASS
      nginx.ingress.kubernetes.io/proxy-read-timeout: '86400'
      nginx.ingress.kubernetes.io/proxy-send-timeout: '86400'
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
        - host: $DOMAIN
          paths:
            - path: "/steamfitter(/|$)(.*)"
              pathType: Prefix
    tls:
      - secretName: appliance-cert
        hosts:
        - $DOMAIN
  identity:
    register: true
    identityMap: 'identity-identity-api'
    initCommand: ''
    client: |-
      {
        "name": "steamfitter-ui",
        "displayName": "Steamfitter UI",
        "description": null,
        "grants": "authorization_code client_credentials",
        "scopes": "openid profile steamfitter-api vm-api player-api",
        "enabled": true,
        "requirePkce": true,
        "allowAccessTokensViaBrowser": true,
        "requireConsent": false,
        "consentLifetime": "30d",
        "alwaysIncludeUserClaimsInIdToken": false,
        "identityTokenLifetime": "5m",
        "accessTokenLifetime": "1h",
        "authorizationCodeLifetime": "5m",
        "allowOfflineAccess": false,
        "updateAccessTokenClaimsOnRefresh": false,
        "useOneTimeRefreshTokens": false,
        "slidingRefreshTokenLifetime": "15d",
        "absoluteRefreshTokenLifetime": "30d",
        "published": true,
        "url": "https://$DOMAIN/steamfitter",
        "logoUrl": null,
        "frontChannelLogoutUrl": null,
        "backChannelLogoutUrl": null,
        "redirectUrls": [
          { "value": "https://$DOMAIN/steamfitter/auth-callback" },
          { "value": "https://$DOMAIN/steamfitter/auth-callback-silent" }
        ],
        "postLogoutUrls": [{ "value": "https://$DOMAIN/steamfitter" }],
        "corsUrls": [{ "value": "https://$DOMAIN" }],
        "alwaysSendClientClaims": false,
        "clientClaimsPrefix": "client_",
        "claims": [],
        "secrets": [],
        "managers": []
      }

  env: 
    ## basehref is path to the app
    APP_BASEHREF: "/steamfitter"

  # Config app settings with a JSON file.
  # These values correspond to an OpenID connect client
  settings: |- 
    {
      "ApiUrl": "https://$DOMAIN/steamfitter",
      "VmApiUrl": "https://$DOMAIN/vm",
      "ApiPlayerUrl": "https://$DOMAIN/player",
      "OIDCSettings": {
          "authority": "https://$DOMAIN/identity",
          "client_id": "steamfitter-ui",
          "redirect_uri": "https://$DOMAIN/steamfitter/auth-callback",
          "post_logout_redirect_uri": "https://$DOMAIN/steamfitter",
          "response_type": "code",
          "scope": "openid profile steamfitter-api vm-api player-api",
          "automaticSilentRenew": true,
          "silent_redirect_uri": "https://$DOMAIN/steamfitter/auth-callback-silent"
      },
      "UseLocalAuthStorage": true
    }