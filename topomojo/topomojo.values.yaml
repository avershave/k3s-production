topomojo-api:
  # Default values for topomojo-api.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: cmusei/topomojo-api
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: '2.0.3'

  imagePullSecrets: []
  nameOverride: ''
  fullnameOverride: ''

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ''

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations:
      nginx.ingress.kuberenetes.io/proxy-body-size: 6g
      kubernetes.io/ingress.class: $INGRESS_CLASS
    hosts:
      - host: $DOMAIN
        paths:
          - path: '/topomojo/api'
          - path: '/topomojo/hub'
          - path: '/topomojo/docs'
    tls:
      - secretName: appliance-cert
        hosts:
          - $DOMAIN

  health:
    {}
    # livenessProbe:
    #   initialDelaySeconds: 10
    #   httpGet:
    #     path: /api/healthz
    #     port: http
    # startupProbe:
    #   initialDelaySeconds: 30
    #   httpGet:
    #     path: /api/healthz
    #     port: http
    #   failureThreshold: 9
    #   periodSeconds: 10

  # storage - either an existing pvc, the size for a new pvc, or emptyDir
  storage:
    existing: ''
    size: '4G'
    mode: ReadWriteOnce
    class: $STORAGE_CLASS_NFS

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 200m
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 256Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  ## migrations sets how data migrations run
  ## If enabled, all replicas will wait until a single migration job runs.
  ## this is important if running multiple replicas or if you use different
  ## connection strings (permissions) for building the database versus using it.
  ## If using a single connection string, no need to specify here. It will use values
  ## from `env` below.
  ## NOTE: the serviceAccount must have permission to `get batch.jobs`.
  ## If you create the serviceAccount above, it will get a RoleBinding to a Role with that allowed.
  migrations:
    enabled: false
    restartPolicy: Never
    Database__Provider: ''
    Database__ConnectionString: ''
    env: {}

  ## customStart overrides the default start process.  Files are mounted in `/start`
  customStart:
    command: ['/bin/sh']
    args: ['/start/start.sh']
    binaryFiles: {}
    files:
      start.sh: |
        #!/bin/sh
        cp /start/*.crt /usr/local/share/ca-certificates && update-ca-certificates
        cd /app && dotnet TopoMojo.Api.dll
      cacert.crt: ''

  ## existingSecret references a secret already in k8s. The values are saved as files in `/app/conf`.
  existingSecret: ''

  # Config app settings with environment vars.
  # Those most likely needing values are listed. For others,
  # see https://github.com/cmu-sei/TopoMojo/blob/master/src/TopoMojo.Api/appsettings.conf
  env:
    PathBase: '/topomojo'
    # Oidc__Audience: topomojo-api
    # Oidc__Authority: http://localhost:5000
    Database__Provider: PostGreSQL
    Database__ConnectionString: "Server=$POSTGRES_SERVER;Port=5432;Database=caster_db;Username=$POSTGRES_USER;Password='$POSTGRES_PASS';SSL Mode=Prefer;Trust Server Certificate=true;"
    # Database__SeedFile: seed-data.json
    Database__AdminId: $TOPOMOJO_DB_ADMIN_ID
    Database__AdminName: $TOPOMOJO_DB_ADMIN_NAME
    # Cache__RedisUrl: ""
    # Cache__Key: ""
    Cache__SharedFolder: ''
    # OpenApi__Enabled: true
    # OpenApi__ApiName: TopoMojo
    # OpenApi__Client__ClientId: topomojo-swagger
    FileUpload__TopoRoot: /mnt/tm
    FileUpload__IsoRoot: /mnt/tm
    FileUpload__DocRoot: /mnt/tm/_docs
    Headers__Cors__Origins__0: 'https://$DOMAIN'
    Headers_Forwarding__TargetHeaders: 'All'
    Core__ConsoleHost: 'https://$DOMAIN/vm/connect'
    # Core__DefaultGamespaceMinutes: 120
    # Core__DefaultGamespaceLimit: 2
    # Core__DefaultWorkspaceLimit: 0
    # Core__DefaultTemplateLimit: 3
    # Core__DefaultUserScope: everyone
    # Core__ReplicaLimit: 5
    # Core__NetworkHostTemplateId: 0
    # Core__GameEngineIsoFolder: static
    # Core__ConsoleHost: ""
    # Core__LaunchUrl: /lp?
    # Core__DocPath: wwwroot/docs
    # Core__AllowUnprivilegedVmReconfigure: false
    Pod__Url: 'https://$VSPHERE_SERVER'
    Pod__User: '$TOPOMOJO_USER'
    Pod__Password: '$TOPOMOJO_PASS'
    Pod__PoolPath: '$TOPOMOJO_POD_POOLPATH'
    Pod__Uplink: '$TOPOMOJO_DVS'
    Pod__VmStore: '$TOPOMOJO_VMSTORE'
    Pod__IsoStore: '$TOPOMOJO_ISOSTORE'
    Pod__DiskStore: '$TOPOMOJO_DISKSTORE'
    Pod__TicketUrlHandler: host-map
    Pod_TicketUrlHostMap: []
    Pod__Vlan__Range: '1500-2000'
    Pod__KeepAliveMinutes: 30
    # Pod__DebugVerbose: false
    # Pod__IsNsxNetwork: false
    # Pod__Sddc__ApiUrl: ""
    # Pod__Sddc__MetadataUrl: ""
    # Pod__Sddc__SegmentApiPath = policy/api/v1/infra/tier-1s/cgw/segments
    # Pod__Sddc__ApiKey: ""
    # Pod__Sddc__AuthUrl: ""
    # Pod__Sddc__CertificatePath: ""
    # Pod__Sddc__CertificatePassword: ""
    # Logging__Console__DisableColors: false
    # Logging__LogLevel__Default: Information

topomojo-ui:
  # Default values for topomojo-ui.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: cmusei/topomojo-ui
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: '2.0.1'

  imagePullSecrets: []
  nameOverride: ''
  fullnameOverride: ''

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ''

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 6g
      kubernetes.io/ingress.class: $INGRESS_CLASS
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: $DOMAIN
        paths:
          - path: ['/topomojo']
    tls:
      - secretName: appliance-cert
        hosts:
          - $DOMAIN

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 20m
    #   memory: 20Mi
    # requests:
    #   cpu: 10m
    #   memory: 10Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  ## basehref is path to the app
  basehref: '/topomojo'

  ## openGraph is string of html head metadata (single line!)
  # openGraph: >-
  #   <!-- Open Graph info for link previews -->
  #   <meta property="og:title" content="AppNmae" />
  #   <meta property="og:type" content="website" />
  #   <meta property="og:url" content="https://some.url" />
  #   <meta property="og:image" content="https://some.url/logo.png" />
  #   <meta property="og:description" content="description" />

  ## faviconsUrl is a url to tgz of icon bundle. If bundle has favicon.html,
  ## its contents will be merged into index.html head element.
  # faviconsUrl: "https://some.url/favs.tgz"

  ## settings is stringified json that gets included as assets/settings.json
  settings: |
    {
      appname: 'TopoMojo',
      oidc: {
        client_id: 'topomojo-client',
        authority: 'https://$DOMAIN/identity',
        redirect_uri: 'https://$DOMAIN/topomojo/oidc',
        silent_redirect_uri: 'https://$DOMAIN/topomojo/oidc-silent.html',
        post_logout_redirect_uri: 'https://$DOMAIN/topomojo',
        response_type: 'code',
        scope: 'openid profile topomojo-api',
        monitorSession: false,
        loadUserInfo: true,
        automaticSilentRenew: false,
        includeIdTokenInSilentRenew: false,
        loadUserInfo: true,
        accessTokenExpiringNotificationTime: 120,
        filterProtocolClaims: true,
        useLocalStorage: false
      }
    }
